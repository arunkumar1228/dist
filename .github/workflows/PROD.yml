name: PROD 
on:
 
 workflow_dispatch:
    inputs:
      env:
        description: env
        default: "prod"
        type: "string"
        required: true
      imageVersion:
        description: image/imageId
        default: "vasanthdev/qbrainx"
        type: "string"
        required: true
      appName:
        description: appName
        default: "qbrainx-prod-app"
        type: "string"
        required: true
        
   
jobs:
  DEPLOY :
    name: Deploy To ${{ inputs.env }}
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Install npm
        run: npm install --legacy-peer-deps
      - name: Install Angular CLI
        run: npm install -g @angular/cli
      - name: Build Angular project
        run: ng build
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.imageVersion }}
          tags: |
            type=raw,value=${{ inputs.env }}-app-{{date 'Y-M-D-T-H-m-s'}}
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Kuberentes (k8s) cli - kubectl
        uses: actions-hub/kubectl@v1.24.0   
        env :
         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
         args: set image deployment/${{ inputs.appName }} ${{ inputs.appName }}=${{ steps.meta.outputs.tags }} -n qbx-prod 
   
